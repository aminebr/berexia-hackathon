{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CheckboxGroup = exports.Checkbox = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Checkbox = exports.Checkbox = function (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _possibleConstructorReturn(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).apply(this, arguments));\n  }\n\n  _createClass(Checkbox, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if (!(this.props && this.props.checkboxGroup)) {\n        throw new Error('The `Checkbox` component must be used as a child of `CheckboxGroup`.');\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          _props$checkboxGroup = _props.checkboxGroup,\n          name = _props$checkboxGroup.name,\n          checkedValues = _props$checkboxGroup.checkedValues,\n          onChange = _props$checkboxGroup.onChange,\n          rest = _objectWithoutProperties(_props, ['checkboxGroup']);\n\n      var optional = {};\n\n      if (checkedValues) {\n        optional.checked = checkedValues.indexOf(this.props.value) >= 0;\n      }\n\n      if (typeof onChange === 'function') {\n        optional.onChange = onChange.bind(null, this.props.value);\n      }\n\n      return _react2.default.createElement('input', _extends({}, rest, {\n        type: 'checkbox',\n        name: name,\n        disabled: this.props.disabled\n      }, optional));\n    }\n  }]);\n\n  return Checkbox;\n}(_react.Component);\n\nCheckbox.displayName = 'Checkbox';\n\nvar CheckboxGroup = exports.CheckboxGroup = function (_Component2) {\n  _inherits(CheckboxGroup, _Component2);\n\n  function CheckboxGroup(props) {\n    _classCallCheck(this, CheckboxGroup);\n\n    var _this2 = _possibleConstructorReturn(this, (CheckboxGroup.__proto__ || Object.getPrototypeOf(CheckboxGroup)).call(this, props));\n\n    _this2._prepareBoxes = function (children) {\n      var maxDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      if (depth > maxDepth) {\n        return children;\n      }\n\n      var checkboxGroup = {\n        name: _this2.props.name,\n        checkedValues: _this2.state.value,\n        onChange: _this2._onCheckboxChange\n      };\n      return _react2.default.Children.map(children, function (child) {\n        if (!(child && child.$$typeof)) {\n          return child;\n        } else if (child.type === Checkbox) {\n          return _react2.default.cloneElement(child, {\n            checkboxGroup: checkboxGroup\n          });\n        } else {\n          return _react2.default.cloneElement(child, {}, child.props.children ? _react2.default.Children.map(child.props.children, function (c) {\n            return _this2._prepareBoxes(c, maxDepth, depth + 1);\n          }) : null);\n        }\n      });\n    };\n\n    _this2._isControlledComponent = _this2._isControlledComponent.bind(_this2);\n    _this2._onCheckboxChange = _this2._onCheckboxChange.bind(_this2);\n    _this2.getValue = _this2.getValue.bind(_this2);\n    _this2.state = {\n      value: _this2.props.value || _this2.props.defaultValue || []\n    };\n    return _this2;\n  }\n\n  _createClass(CheckboxGroup, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.value) {\n        this.setState({\n          value: newProps.value\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          Component = _props2.Component,\n          name = _props2.name,\n          value = _props2.value,\n          onChange = _props2.onChange,\n          children = _props2.children,\n          _props2$checkboxDepth = _props2.checkboxDepth,\n          checkboxDepth = _props2$checkboxDepth === undefined ? 1 : _props2$checkboxDepth,\n          rest = _objectWithoutProperties(_props2, ['Component', 'name', 'value', 'onChange', 'children', 'checkboxDepth']);\n\n      return _react2.default.createElement(Component, rest, this._prepareBoxes(children, checkboxDepth));\n    }\n  }, {\n    key: 'getValue',\n    value: function getValue() {\n      return this.state.value;\n    }\n  }, {\n    key: '_isControlledComponent',\n    value: function _isControlledComponent() {\n      return Boolean(this.props.value);\n    }\n  }, {\n    key: '_onCheckboxChange',\n    value: function _onCheckboxChange(checkboxValue, event) {\n      var newValue = void 0;\n\n      if (event.target.checked) {\n        newValue = this.state.value.concat(checkboxValue);\n      } else {\n        newValue = this.state.value.filter(function (v) {\n          return v !== checkboxValue;\n        });\n      }\n\n      if (this._isControlledComponent()) {\n        this.setState({\n          value: this.props.value\n        });\n      } else {\n        this.setState({\n          value: newValue\n        });\n      }\n\n      if (typeof this.props.onChange === 'function') {\n        this.props.onChange(newValue, event, this.props.name);\n      }\n    }\n  }]);\n\n  return CheckboxGroup;\n}(_react.Component);\n\nCheckboxGroup.displayName = 'CheckboxGroup';\nCheckboxGroup.defaultProps = {\n  Component: \"div\"\n};","map":null,"metadata":{},"sourceType":"script"}