{"ast":null,"code":"import _toConsumableArray from \"/home/ibtihel/Desktop/berexia/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/ibtihel/Desktop/berexia/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ibtihel/Desktop/berexia/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ibtihel/Desktop/berexia/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ibtihel/Desktop/berexia/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ibtihel/Desktop/berexia/reactapp/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ibtihel/Desktop/berexia/reactapp/frontend/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as SRD from \"storm-react-diagrams\";\nimport \"./styles.css\";\nimport Modal from 'react-responsive-modal';\nimport axios from 'axios';\nimport { Checkbox, CheckboxGroup } from 'react-checkbox-group';\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nvar a = new list();\nvar engine = new SRD.DiagramEngine();\nengine.installDefaultFactories(); // 2) setup the diagram model\n\nvar model = new SRD.DiagramModel(); // 3) create a default node\n//var node1 = new SRD.DefaultNodeModel(\"Node 1\", \"rgb(0,192,255)\");\n//let port1 = node1.addOutPort(\"Out\");\n//node1.setPosition(100, 100);\n// 4) create another default node\n//var node2 = new SRD.DefaultNodeModel(\"Node 2\", \"rgb(192,255,0)\");\n//let port2 = node2.addInPort(\"In\");\n//node2.setPosition(400, 100);\n// 5) link the ports\n//let link1 = port1.link(port2);\n// 6) add the models to the root graph\n//model.addAll(node1, node2, link1);\n// 7) load model into engine\n\nengine.setDiagramModel(model); // console.log(model);\n// console.log(engine);\n\nvar str = \"name,age,country,region\";\nvar listSQL = ['and', 'or', 'where', 'not', 'like', '>', '<', '<>', '=', '<=', '>=', 'AVG', 'MIN', 'MAX', '(', ')', '+', '-', '*', '/'];\nvar listGroupBy = ['AVG', 'MIN', 'MAX', 'FIRST', ','];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.path = \"EA_result_1351.xlsx\";\n\n    _this.fileInput = function (e) {\n      var file = e.target.files[0];\n      var newNode = new SRD.DefaultNodeModel(file.name, \"blue\");\n      newNode.addOutPort(\"out\");\n      model.addNode(newNode);\n      a = newNode;\n\n      _this.forceUpdate();\n      /*  this.componentDidMount()\n      {\n        fetch('http://localhost:9000/findallcolumns/{file.name}').then(res=>{\n          res.json()\n        }).then(res=>{\n          this.setState({\n            columns: res\n          }).catch(error=>{\n            console.log(error)\n          })\n        })    \n      }\n      */\n\n    };\n\n    _this.run = function () {\n      console.log(a);\n    };\n\n    _this.addSelect = function () {\n      var newNode1 = new SRD.DefaultNodeModel(\"Select\", \"green\");\n      newNode1.addOutPort(\"out\");\n      newNode1.addInPort(\"in\");\n      model.addNode(newNode1);\n      console.log(newNode1);\n\n      _this.forceUpdate(); //  newNode1.addListener({selectionChanged : console.log(\"******\")});\n      // console.log(\"hiiii\");\n      // console.log(model.getSelectedItems());\n      //   model.addListener({\n      //     linksUpdated: e => {  \n      //       console.log(\"udated!!\") \n      //       console.log(e)\n      //       if( (e.link.sourcePort!=null)&&(e.link.targetPort!=null)){\n      //       console.log(\"*************************\")\n      //       if(e.link.targetPort.parent.id!=e.link.sourcePort.parent.id)\n      //   {\n      //     console.log(\"dsfsdf\")\n      //     this.setState({listNodesId:[e.link.sourcePort.parent.id,e.link.targetPort.parent.id]})   }}\n      // }\n      // });\n\n\n      newNode1.addListener({\n        selectionChanged: function selectionChanged() {\n          document.getElementById('configureCombine').style.display = 'none';\n          document.getElementById('configureGroupBy').style.display = 'none';\n          document.getElementById('configureSelect').style.display = 'block';\n        }\n      });\n    };\n\n    _this.addSQL = function (item) {\n      console.log(item);\n\n      _this.setState({\n        sqlString: _this.state.sqlString + ' ' + item.item\n      });\n\n      console.log(_this.state.sqlString);\n    };\n\n    _this.addCombine = function () {\n      var newNode = new SRD.DefaultNodeModel(\"Combine\", \"red\");\n      newNode.addOutPort(\"out\");\n      newNode.addInPort(\"in1\");\n      newNode.addInPort(\"in2\");\n      model.addNode(newNode);\n\n      _this.forceUpdate();\n\n      console.log(model);\n      newNode.addListener({\n        selectionChanged: function selectionChanged() {\n          document.getElementById('configureSelect').style.display = 'none';\n          document.getElementById('configureGroupBy').style.display = 'none';\n          document.getElementById('configureCombine').style.display = 'block';\n        }\n      });\n    };\n\n    _this.addGroupBy = function () {\n      var newNode = new SRD.DefaultNodeModel(\"GroupBy\", \"pink\");\n      newNode.addOutPort(\"out\");\n      newNode.addInPort(\"in\");\n      model.addNode(newNode);\n\n      _this.forceUpdate();\n\n      newNode.addListener({\n        selectionChanged: function selectionChanged() {\n          document.getElementById('configureSelect').style.display = 'none';\n          document.getElementById('configureGroupBy').style.display = 'block';\n          document.getElementById('configureCombine').style.display = 'none';\n        }\n      });\n    };\n\n    _this.getColumns = function () {\n      var newstr = str.split(',');\n      return newstr;\n    };\n\n    _this.onOpenGroupByModal = function () {\n      _this.setState({\n        openGroupBy: true\n      });\n    };\n\n    _this.onOpenSelectModal = function () {\n      _this.setState({\n        openSelect: true\n      });\n    };\n\n    _this.onOpenCombineModal = function () {\n      _this.setState({\n        opencombine: true\n      });\n    };\n\n    _this.onCloseCombine = function () {};\n\n    _this.onCloseSelectModal = function () {\n      Object.keys(model.links).map(function (item, i) {\n        return _this.setState({\n          listNodesId: [model.links[item].sourcePort.parent.id, model.links[item].targetPort.parent.id]\n        });\n      });\n\n      _this.setState({\n        finalSQL: _this.state.firstSQL + _this.state.sqlString\n      });\n\n      if (_this.state.finalSQL) {\n        _this.setState({\n          finalRqt: _toConsumableArray(_this.state.finalRqt).concat([_toConsumableArray(_this.state.listNodesId).concat([_this.state.finalSQL])])\n        });\n\n        _this.setState({\n          openSelect: false\n        });\n\n        _this.setState({\n          finalSQL: \"\",\n          sqlString: \"\"\n        });\n      }\n    };\n\n    _this.onCloseGroupBy = function () {\n      Object.keys(model.links).map(function (item, i) {\n        return _this.setState({\n          listNodesId: [model.links[item].sourcePort.parent.id, model.links[item].targetPort.parent.id]\n        });\n      });\n\n      _this.setState({\n        lastGroupByRqt: _this.state.firstSQL + _this.state.sqlString + _this.state.lastgroupby\n      });\n\n      if (_this.state.lastGroupByRqt) {\n        _this.setState({\n          finalRqt: [_this.state.finalRqt, _toConsumableArray(_this.state.listNodesId).concat([_this.state.lastGroupByRqt])]\n        });\n\n        _this.setState({\n          openGroupBy: false\n        });\n\n        _this.setState({\n          firstSQL: \"\",\n          sqlString: \"\",\n          lastgroupby: \"\",\n          lastGroupByRqt: \"\"\n        });\n      }\n    };\n\n    _this.handleChangeSQL = function (event) {\n      _this.setState({\n        inputSQl: event.target.value\n      });\n    };\n\n    _this._handleKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        _this.setState({\n          sqlString: _this.state.sqlString + ' ' + _this.state.inputSQl,\n          inputSQl: \"\"\n        });\n      }\n    };\n\n    _this.columnNamesChanged = function (newItems) {\n      _this.setState({\n        firstSQL: \"select \" + newItems.toString(),\n        lastgroupby: \" GroupBy \" + newItems.toString() // firstSQL:this.state.firstSQL+','+newItems\n        // fruits: newFruits\n\n      });\n    };\n\n    _this.state = {\n      sqlString: '',\n      openSelect: false,\n      opencombine: false,\n      firstSQL: \"select \",\n      inputSQl: \"\",\n      listNodesId: [],\n      finalRqt: [],\n      finalSQL: \"\",\n      lastgroupby: [],\n      lastGroupByRqt: \"\",\n      openGroupBy: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      axios.get(\"http://localhost:9000/test3/{path}\").then(function (res) {\n        var s = res.data; // console.log(s);   \n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          openSelect = _this$state.openSelect,\n          openGroupBy = _this$state.openGroupBy,\n          openCombine = _this$state.openCombine;\n      var sentenceSQL = this.state.sqlString;\n      var arrayop = listSQL.concat(_toConsumableArray(this.getColumns()));\n      var groupByopArray = listGroupBy.concat();\n      this.getColumns().map(function (item, i) {\n        groupByopArray.push('(' + item + ')');\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: openSelect,\n        onClose: this.onCloseSelectModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"betbet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"SELECT COLUMNS\"), React.createElement(CheckboxGroup, {\n        checkboxDepth: 2 // This is needed to optimize the checkbox group\n        ,\n        name: \"fruits\",\n        value: this.state.columnNames,\n        onChange: this.columnNamesChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, this.getColumns().map(function (item, i) {\n        return React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }), \" \", item);\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"WHERE CLAUSE\"), arrayop.map(function (item) {\n        return React.createElement(\"button\", {\n          class: \"button\",\n          onClick: function onClick() {\n            return _this2.addSQL({\n              item: item\n            });\n          },\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, item);\n      }), \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.inputSQl,\n        onChange: this.handleChangeSQL.bind(this),\n        onKeyPress: this._handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"betbet1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, sentenceSQL)), React.createElement(Modal, {\n        open: openGroupBy,\n        onClose: this.onCloseGroupBy,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"betbet2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"GROUP BY COLUMNS\"), React.createElement(CheckboxGroup, {\n        checkboxDepth: 2 // This is needed to optimize the checkbox group\n        ,\n        name: \"fruits\",\n        value: this.state.columnNames,\n        onChange: this.columnNamesChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, this.getColumns().map(function (item, i) {\n        return React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }), \" \", item);\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"FUNCTIONS\"), groupByopArray.map(function (item) {\n        return React.createElement(\"button\", {\n          class: \"button\",\n          onClick: function onClick() {\n            return _this2.addSQL({\n              item: item\n            });\n          },\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, item);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"betbet3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, this.state.firstSQL + this.state.sqlString)), React.createElement(Modal, {\n        open: openCombine,\n        onClose: this.onCloseCombine,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(CheckboxGroup, {\n        checkboxDepth: 2 // This is needed to optimize the checkbox group\n        ,\n        name: \"fruits\",\n        value: this.state.columnNames,\n        onChange: this.columnNamesChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, this.getColumns().map(function (item, i) {\n        return React.createElement(\"label\", {\n          class: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          style: \"display:inline;\",\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }), \" \", item);\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, this.state.firstSQL + this.state.sqlString)), React.createElement(\"div\", {\n        id: \"betbet4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"button\",\n        id: \"configureSelect\",\n        hidden: \"hidden\",\n        onClick: this.onOpenSelectModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Configure Select\"), React.createElement(\"button\", {\n        class: \"button\",\n        id: \"configureGroupBy\",\n        hidden: \"hidden\",\n        onClick: this.onOpenGroupByModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \" Configure GroupBy\"), React.createElement(\"button\", {\n        class: \"button\",\n        id: \"configureCombine\",\n        hidden: \"hidden\",\n        onClick: this.onOpenCombineModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \" Configure Combine\"), React.createElement(\"input\", {\n        type: \"file\",\n        id: \"betbet5\",\n        label: \"upload\",\n        onChange: this.fileInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        class: \"button\",\n        onClick: this.addSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"Select\"), React.createElement(\"button\", {\n        class: \"button\",\n        onClick: this.addCombine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Combine\"), React.createElement(\"button\", {\n        class: \"button\",\n        onClick: this.addGroupBy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"GroupBy\"), React.createElement(\"button\", {\n        class: \"button\",\n        onClick: this.run,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, \"Run\")), React.createElement(SRD.DiagramWidget, {\n        diagramEngine: engine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 408\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/ibtihel/Desktop/berexia/reactapp/frontend/src/index.js"],"names":["React","Component","ReactDOM","SRD","Modal","axios","Checkbox","CheckboxGroup","require","a","list","engine","DiagramEngine","installDefaultFactories","model","DiagramModel","setDiagramModel","str","listSQL","listGroupBy","App","props","path","fileInput","e","file","target","files","newNode","DefaultNodeModel","name","addOutPort","addNode","forceUpdate","run","console","log","addSelect","newNode1","addInPort","addListener","selectionChanged","document","getElementById","style","display","addSQL","item","setState","sqlString","state","addCombine","addGroupBy","getColumns","newstr","split","onOpenGroupByModal","openGroupBy","onOpenSelectModal","openSelect","onOpenCombineModal","opencombine","onCloseCombine","onCloseSelectModal","Object","keys","links","map","i","listNodesId","sourcePort","parent","id","targetPort","finalSQL","firstSQL","finalRqt","onCloseGroupBy","lastGroupByRqt","lastgroupby","handleChangeSQL","event","inputSQl","value","_handleKeyPress","key","columnNamesChanged","newItems","toString","get","then","res","s","data","openCombine","sentenceSQL","arrayop","groupByopArray","push","columnNames","bind","rootElement","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as SRD from \"storm-react-diagrams\";\n\nimport \"./styles.css\";\nimport Modal from 'react-responsive-modal';\nimport axios from 'axios';\nimport {Checkbox, CheckboxGroup} from 'react-checkbox-group';\n\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nvar a = new list() ;\nvar engine = new SRD.DiagramEngine();\nengine.installDefaultFactories();\n\n// 2) setup the diagram model\nvar model = new SRD.DiagramModel();\n\n// 3) create a default node\n//var node1 = new SRD.DefaultNodeModel(\"Node 1\", \"rgb(0,192,255)\");\n//let port1 = node1.addOutPort(\"Out\");\n//node1.setPosition(100, 100);\n\n// 4) create another default node\n//var node2 = new SRD.DefaultNodeModel(\"Node 2\", \"rgb(192,255,0)\");\n//let port2 = node2.addInPort(\"In\");\n//node2.setPosition(400, 100);\n\n// 5) link the ports\n//let link1 = port1.link(port2);\n\n// 6) add the models to the root graph\n//model.addAll(node1, node2, link1);\n\n// 7) load model into engine\nengine.setDiagramModel(model);\n// console.log(model);\n// console.log(engine);\n\nconst str=\"name,age,country,region\"\nconst listSQL=['and','or','where','not','like','>','<','<>','=','<=','>=','AVG','MIN','MAX','(',')','+','-','*','/']\nconst listGroupBy=['AVG','MIN','MAX','FIRST',',']\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {sqlString:''\n    ,openSelect:false,\n    opencombine:false,\n    firstSQL:\"select \"\n    ,inputSQl:\"\"\n    ,listNodesId:[],\n  finalRqt:[],\n  finalSQL:\"\",\n  lastgroupby:[],\n  lastGroupByRqt:\"\",\nopenGroupBy:false };\n\n  }\n\n path=\"EA_result_1351.xlsx\";\n\n\n  fileInput = e => {\n    const file = e.target.files[0];\n    const newNode = new SRD.DefaultNodeModel(file.name, \"blue\");\n    newNode.addOutPort(\"out\");\n    model.addNode(newNode);\n    a = newNode ;\n    this.forceUpdate();\n\n    \n\n\n  \n    /*  this.componentDidMount()\n    {\n      fetch('http://localhost:9000/findallcolumns/{file.name}').then(res=>{\n        res.json()\n      }).then(res=>{\n        this.setState({\n          columns: res\n        }).catch(error=>{\n          console.log(error)\n        })\n      })    \n    }\n  */\n  \n  };\n\n  \n  \n  componentDidMount() {\n    axios.get(`http://localhost:9000/test3/{path}`)\n      .then(res => {\n        const s = res.data;\n// console.log(s);   \n   })\n  }\n\n  run=()=>{\n    console.log(a);\n\n  }\n\n    \n\n  addSelect = () => {\n    const newNode1 = new SRD.DefaultNodeModel(\"Select\", \"green\");\n    newNode1.addOutPort(\"out\");\n    newNode1.addInPort(\"in\");\n    model.addNode(newNode1);\n    console.log(newNode1);\n    this.forceUpdate(); \n\n\n    //  newNode1.addListener({selectionChanged : console.log(\"******\")});\n\n  \n    // console.log(\"hiiii\");\n    // console.log(model.getSelectedItems());\n\n\n\n  //   model.addListener({\n  //     linksUpdated: e => {  \n  //       console.log(\"udated!!\") \n  //       console.log(e)\n  //       if( (e.link.sourcePort!=null)&&(e.link.targetPort!=null)){\n  //       console.log(\"*************************\")\n  //       if(e.link.targetPort.parent.id!=e.link.sourcePort.parent.id)\n  //   {\n  //     console.log(\"dsfsdf\")\n  //     this.setState({listNodesId:[e.link.sourcePort.parent.id,e.link.targetPort.parent.id]})   }}\n  // }\n  \n      \n// });\n\n\n    newNode1.addListener({\n      selectionChanged: () => {\n        document.getElementById('configureCombine').style.display = 'none';\n\n        document.getElementById('configureGroupBy').style.display = 'none';\n        document.getElementById('configureSelect').style.display = 'block';\n      }\n        });\n\n\n  };\n\n  addSQL = (item) => {\n    console.log(item)\n     this.setState({sqlString:  this.state.sqlString +' '+ item.item})\n    console.log(this.state.sqlString)\n  };\n\n\n  addCombine = () => {\n    const newNode = new SRD.DefaultNodeModel(\"Combine\", \"red\");\n    newNode.addOutPort(\"out\");\n    newNode.addInPort(\"in1\");\n    newNode.addInPort(\"in2\");\n    model.addNode(newNode);\n    this.forceUpdate();\n    console.log(model);\n    newNode.addListener({\n      selectionChanged: () => {\n        document.getElementById('configureSelect').style.display = 'none';\n        document.getElementById('configureGroupBy').style.display = 'none';\n        document.getElementById('configureCombine').style.display = 'block';\n      }\n        });\n    \n  };\n  addGroupBy = () => {\n    const newNode = new SRD.DefaultNodeModel(\"GroupBy\", \"pink\");\n    newNode.addOutPort(\"out\");\n    newNode.addInPort(\"in\");\n    model.addNode(newNode);\n\n    this.forceUpdate();\n\n\n    newNode.addListener({\n      selectionChanged: () => {\n        document.getElementById('configureSelect').style.display = 'none';\n        document.getElementById('configureGroupBy').style.display = 'block';\n        document.getElementById('configureCombine').style.display = 'none';\n\n\n      }\n        });\n  };\n\n  // state = {\n  //   open: false,\n  // };\n\n\n  getColumns=()=> {\n    var newstr = str.split(',');\n    return newstr\n  }\n\n \n    //console.log(model.links)\n  \n    onOpenGroupByModal =()=>{\n      this.setState({openGroupBy:true})\n    }\n\n  onOpenSelectModal = () => {\n    this.setState({ openSelect: true });\n  };\n  \n  onOpenCombineModal = () => {\n    this.setState({ opencombine: true });\n  };\n\n   \n\n  onCloseCombine=()=>{\n\n  }\n\n  onCloseSelectModal = () => {\n    Object.keys(model.links).map((item, i) => (\n      this.setState({listNodesId:[model.links[item].sourcePort.parent.id,model.links[item].targetPort.parent.id]})  \n    ))\n    this.setState({finalSQL:this.state.firstSQL+this.state.sqlString });\n    if (this.state.finalSQL)\n    {\n    this.setState({finalRqt:[...this.state.finalRqt,[...this.state.listNodesId,this.state.finalSQL]]})\n    this.setState({openSelect: false})\n    this.setState({finalSQL:\"\",sqlString:\"\"})\n    }\n  };\n\n  onCloseGroupBy=()=>{\n    Object.keys(model.links).map((item, i) => (\n      this.setState({listNodesId:[model.links[item].sourcePort.parent.id,model.links[item].targetPort.parent.id]})  \n    ))\n    this.setState({lastGroupByRqt:this.state.firstSQL+this.state.sqlString+this.state.lastgroupby})\n\n    if (this.state.lastGroupByRqt)\n    {\n      this.setState({finalRqt:[this.state.finalRqt,[...this.state.listNodesId,this.state.lastGroupByRqt]]})\n      this.setState({openGroupBy:false})\n      this.setState({firstSQL:\"\",sqlString:\"\",lastgroupby:\"\",lastGroupByRqt:\"\"})\n\n    }\n   \n  }\n\n  handleChangeSQL=(event)=>{\n    \n    this.setState({inputSQl:event.target.value})\n\n  }\n\n  _handleKeyPress = (e) => {\n    \n    if (e.key === 'Enter') {\n      this.setState({sqlString:this.state.sqlString+' '+this.state.inputSQl,inputSQl:\"\"})\n    }\n  }\n   \n\n  columnNamesChanged = (newItems) => {\n    \n\n    this.setState({\n      firstSQL: \"select \"+ newItems.toString(),\n      lastgroupby:\" GroupBy \"+newItems.toString()\n      // firstSQL:this.state.firstSQL+','+newItems\n      // fruits: newFruits\n    });\n  }\n\n\n  render() {\n    const { openSelect,openGroupBy,openCombine } = this.state;\n    var sentenceSQL = this.state.sqlString\n    var arrayop = [...listSQL, ...this.getColumns()]\n    var groupByopArray = [...listGroupBy]\n    this.getColumns().map((item,i)=>{\n      groupByopArray.push('('+item+')')\n    })\n    return (\n    <div className=\"App\">\n\n\n\n\n\n\n <Modal open={openSelect} onClose={this.onCloseSelectModal} center>           \n<div id=\"betbet\">\n<h3>SELECT COLUMNS</h3>\n  <CheckboxGroup\n    checkboxDepth={2} // This is needed to optimize the checkbox group\n    name=\"fruits\"\n    value={this.state.columnNames}\n    onChange={this.columnNamesChanged}>\n {this.getColumns().map(function(item, i){\n   return <label><Checkbox value={item}/> {item}</label>})}\n  </CheckboxGroup>\n  </div>\n\n\n  <div>\n  <h3>WHERE CLAUSE</h3>\n    {\n arrayop.map((item)=>(\n     <button class=\"button\" onClick={() => this.addSQL({item})} value={item}>{item}</button>\n  ))\n} </div>\n<div>\n\n  <input type='text' value={this.state.inputSQl} onChange={this.handleChangeSQL.bind(this)}\n  onKeyPress={this._handleKeyPress} />\n  </div>\n  <br></br><br></br>\n      <div id=\"betbet1\">\n  {sentenceSQL}\n     </div>\n          \n\n        </Modal>    \n  \n\n\n\n  <Modal  open={openGroupBy} onClose={this.onCloseGroupBy} center>\n\n      <div id=\"betbet2\">\n      <h3>GROUP BY COLUMNS</h3>\n  <CheckboxGroup\n    checkboxDepth={2} // This is needed to optimize the checkbox group\n    name=\"fruits\"\n    \n    value={this.state.columnNames}\n    onChange={this.columnNamesChanged}\n>\n {\n   this.getColumns().map(function(item, i){\n   \n   return <label><Checkbox value={item}/> {item}</label>})}\n  </CheckboxGroup>\n  </div>\n<div>\n<h3>FUNCTIONS</h3>\n\n{\n  groupByopArray.map((item)=>(\n     <button  class=\"button\" onClick={() => this.addSQL({item})} value={item}>{item}</button>\n  ))\n}\n  </div>\n  <br></br><br></br>\n  <div id=\"betbet3\">{this.state.firstSQL+this.state.sqlString}</div>\n</Modal> \n\n\n\n\n\n  <Modal open={openCombine} onClose={this.onCloseCombine} center>\n<div>\n<CheckboxGroup\ncheckboxDepth={2} // This is needed to optimize the checkbox group\nname=\"fruits\"\n\nvalue={this.state.columnNames}\nonChange={this.columnNamesChanged}\n>\n{\nthis.getColumns().map(function(item, i){\n\nreturn <label class=\"checkmark\"><Checkbox  style=\"display:inline;\" value={item}/> {item}</label>})}\n</CheckboxGroup>\n</div>\n\n<div>{this.state.firstSQL+this.state.sqlString}</div>\n   </Modal> \n    <div id =\"betbet4\">\n        <button class=\"button\" id=\"configureSelect\" hidden=\"hidden\" onClick={this.onOpenSelectModal} >Configure Select</button>\n        <button class=\"button\" id=\"configureGroupBy\" hidden=\"hidden\" onClick={this.onOpenGroupByModal}> Configure GroupBy</button>\n        <button class=\"button\" id=\"configureCombine\" hidden=\"hidden\" onClick={this.onOpenCombineModal}> Configure Combine</button>\n\n        <input type=\"file\"  id=\"betbet5\" label=\"upload\" onChange={this.fileInput} />\n        <button class=\"button\" onClick={this.addSelect}>Select</button>\n        <button class=\"button\" onClick={this.addCombine}>Combine</button>\n        <button class=\"button\" onClick={this.addGroupBy}>GroupBy</button>\n        <button class=\"button\" onClick={this.run}>Run</button>\n</div>\n        <SRD.DiagramWidget diagramEngine={engine} />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}